/** @type {import('tailwindcss').Config} */
export default {
    content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
    darkMode: 'class',
    theme: {
      extend: {
        colors: {
          primary: {
            DEFAULT: 'rgb(var(--color-primary))',
            50: 'rgb(var(--color-primary) / 0.05)',
            100: 'rgb(var(--color-primary) / 0.1)',
            200: 'rgb(var(--color-primary) / 0.2)',
            300: 'rgb(var(--color-primary) / 0.3)',
            400: 'rgb(var(--color-primary) / 0.4)',
            500: 'rgb(var(--color-primary) / 0.5)',
            600: 'rgb(var(--color-primary) / 0.6)',
            700: 'rgb(var(--color-primary) / 0.7)',
            800: 'rgb(var(--color-primary) / 0.8)',
            900: 'rgb(var(--color-primary) / 0.9)',
          },
          secondary: {
            DEFAULT: 'rgb(var(--color-secondary))',
            50: 'rgb(var(--color-secondary) / 0.05)',
            100: 'rgb(var(--color-secondary) / 0.1)',
            200: 'rgb(var(--color-secondary) / 0.2)',
            300: 'rgb(var(--color-secondary) / 0.3)',
            400: 'rgb(var(--color-secondary) / 0.4)',
            500: 'rgb(var(--color-secondary) / 0.5)',
            600: 'rgb(var(--color-secondary) / 0.6)',
            700: 'rgb(var(--color-secondary) / 0.7)',
            800: 'rgb(var(--color-secondary) / 0.8)',
            900: 'rgb(var(--color-secondary) / 0.9)',
          },
          success: {
            DEFAULT: 'rgb(var(--color-success))',
            50: 'rgb(var(--color-success) / 0.05)',
            100: 'rgb(var(--color-success) / 0.1)',
            200: 'rgb(var(--color-success) / 0.2)',
            300: 'rgb(var(--color-success) / 0.3)',
            400: 'rgb(var(--color-success) / 0.4)',
            500: 'rgb(var(--color-success) / 0.5)',
            600: 'rgb(var(--color-success) / 0.6)',
            700: 'rgb(var(--color-success) / 0.7)',
            800: 'rgb(var(--color-success) / 0.8)',
            900: 'rgb(var(--color-success) / 0.9)',
          },
          warning: {
            DEFAULT: 'rgb(var(--color-warning))',
            50: 'rgb(var(--color-warning) / 0.05)',
            100: 'rgb(var(--color-warning) / 0.1)',
            200: 'rgb(var(--color-warning) / 0.2)',
            300: 'rgb(var(--color-warning) / 0.3)',
            400: 'rgb(var(--color-warning) / 0.4)',
            500: 'rgb(var(--color-warning) / 0.5)',
            600: 'rgb(var(--color-warning) / 0.6)',
            700: 'rgb(var(--color-warning) / 0.7)',
            800: 'rgb(var(--color-warning) / 0.8)',
            900: 'rgb(var(--color-warning) / 0.9)',
          },
          error: {
            DEFAULT: 'rgb(var(--color-error))',
            50: 'rgb(var(--color-error) / 0.05)',
            100: 'rgb(var(--color-error) / 0.1)',
            200: 'rgb(var(--color-error) / 0.2)',
            300: 'rgb(var(--color-error) / 0.3)',
            400: 'rgb(var(--color-error) / 0.4)',
            500: 'rgb(var(--color-error) / 0.5)',
            600: 'rgb(var(--color-error) / 0.6)',
            700: 'rgb(var(--color-error) / 0.7)',
            800: 'rgb(var(--color-error) / 0.8)',
            900: 'rgb(var(--color-error) / 0.9)',
          },
        },
        fontFamily: {
          sans: ['Inter', 'system-ui', 'sans-serif'],
        },
        animation: {
          'fade-in': 'fadeIn 0.5s ease-out forwards',
          'pulse-slow': 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
        },
        boxShadow: {
          'inner-sm': 'inset 0 1px 2px 0 rgb(0 0 0 / 0.05)',
        },
      },
    },
    plugins: [],
  };